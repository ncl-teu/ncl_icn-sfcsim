# ネットワーク環境を書き出すかどうか
# 0: しない 1: 書き出す.
iswritenw=0
# 書き出すファイル名
nwfile=nwfile.json
# # of Routers: # of VMs
ccn_router_num=500
#CCNノード数
ccn_node_num=100
# TTL値
ccn_interest_ttl=32
# 実際の帯域幅の割合．0 ~ 1の小数点で設定してください．
# 例えば100Mbpsで割合が0.5だと，実際には
# 100 x 0.5=50Mbps程度の実効速度
# という扱いになる．
ccn_actual_data_rate=0.7
#1ホップのネットワーク遅延です．単位はミリ秒です．
ccn_hop_per_delay=10
ccn_hop_per_delay_min=3
ccn_hop_per_delay_max=10
ccn_hop_per_delay_mu=0.5
# 使うルーティングアルゴリズム番号
# 最初にFIBのエントリを埋めるアルゴリズム
# BA: Barabasi-Albert Model
# 0: Chord 1: Chord with BA 2: LongestMatch 3: AutoRouging
ccn_routing_no=3
#0: Master-worker mode 1: Decentralized Mode
ccn_sfc_mode=1

############ FNJ Problem START ################
# 0: Active 1: Passive 2: Hybrid, else: No check
fnj_checkmode=1
# Time Duration for sending interest packet
fnj_passive_duration=5000
############ FNJ Problem END ################

# Chordアルゴリズムで使う，SHA1ハッシュコードの2^m-1のmの値
# Chordだと，最大でm=160
ccn_max_pow=20
ccn_chord_pit_threshold=3
# 候補となるアルゴリズムの数．追加したら，かならずこの値も+1してください．
ccn_routing_allnum=5
# 使うキャッシュアルゴリズム番号
# 0: On-pathキャッシング（帰り道のルータすべてでキャッシュする）
# 1: Noキャッシング（キャッシュしない）
# 2: On-Path Plus
ccn_caching_no=0
# 候補となるアルゴリズムの数．追加したら，かならずこの値も+1してください．
ccn_caching_allnum=3
# 各ノードの隣接ルータ数
ccn_node_routernum=10
#CCNノードで送信するInterestパケットの種類（この数だけ，要求を出す）
# Ignored in this case.
ccn_node_request_num=10
# Face数の最小値@ルータ(つまりRIB)
ccn_node_face_num_min=5
# Face数の最大値＠ルータ
ccn_node_face_num_max=20
# prefixのデリミタ"/"の数
ccn_prefix_delimiter_num_min=3
ccn_prefix_delimiter_num_max=10
#同一prefixを保持するルータ数
ccn_prefix_degree_min=2
ccn_prefix_degree_max=4
# コンテンツサイズの最小値(MB)
ccn_contents_size_min=20
# コンテンツサイズの最大値(MB)
ccn_contents_size_max=100
# PIT min
ccn_pit_entry_min=30
# PIT max
ccn_pit_entry_max=50
# FIB min
ccn_fib_entry_min=50
# FIB max
ccn_fib_entry_max=80
# CS min
ccn_cs_entry_min=30
# CS max
ccn_cs_entry_max=50
#0: uniform dist. 1: normal dist.
dist_num_contents=1
# muの値.
dist_num_contents_mu=0.5
# ノードがもつコンテンツの最小数
ccn_node_num_contents_min=0
#ノードがもつコンテンツの最大数
ccn_node_num_contents_max=0
# 全体として，同一コンテンツに対するInterestパケットを送る数
# 重複prefixをもつInterestを送信するノード数
ccn_node_duplicate_interest_num_min=3
ccn_node_duplicate_interest_num_max=10
# interestパケットが要求するコンテンツ数（人気度）の分布
# 0: 一様分布 1: 正規分布
dist_duplicate_interest=1
# 正規分布の場合のmu値.
dist_duplicate_interest_mu=0.2
# 同一prefixを持つノードの数
ccn_fib_duplicate_num_min=5
ccn_fib_duplicate_num_max=10
dist_fib_duplicate_mu=0.5
#個別の呼発生は，指数分布に従うものとする．
# 1秒あたりの要求発生確率λ_min（最小値）
ccn_request_exp_dist_lambda_min=0.2
# 1秒あたりの要求発生確率λ_max（最大値）
ccn_request_exp_dist_lambda_max=0.5
# 各ルータ，ノードの帯域幅分布．0: 一様分布 1: 正規分布
ccn_dist_bw=1
# 中間値の場所（0.5だと，中間の値が一番多い）
ccn_dist_bw_mu=0.5
#帯域幅(MBps)
ccn_bw_min=300
ccn_bw_max=1000
# Breadcrumbsの設定
# 0: NoBreadCrumbsAlgorithm 1: BreadCrumbsAlgorithm
ccn_bc_enable=0
# BCアルゴリズムの総数
ccn_bc_allnum=2
# BreadCrumbsの寿命を設定(単位は秒）
ccn_bc_timeout=3600
ccn_churn_enable=0
ccn_join_exp_dist_lambda=0.2
ccn_leave_exp_dist_lambda=0.5
ccn_churn_allnum=2
### For CLoud Environment
### # of Applications for ICN-SEC Mode
ccn_sfc_totalnum=5
ccn_sfc_typenum=2
######### SFC section START #########
# コアの利用率上限を考慮するかどうか
# 0: 考慮しない 1: 考慮する
cloud_constrained_mode=1
# コアの使用率の上限値
core_max_usage=60
# VNFをvCPUへ割り当てたときの利用率上昇値（%)
vnf_usage_min=20
vnf_usage_max=80
# 0: uniform distribution, 1: normal distribution
dist_vnf_usage=1
dist_vnf_usage_mu=0.5
vnf_type_max=10
# MByte
vnf_image_size_min=50
vnf_image_size_max=1000
#Instructions / 10^7
# 3.0GHzで1秒 = 300
vnf_weight_min=3000
vnf_weight_max=10000
# 0: uniforma distribution 1: normal distribution
dist_vnf_weight=1
dist_vnf_weight_mu=0.5
# MB
# 100Mbps (125MB/s)で1秒 = 125
vnf_datasize_min=1
vnf_datasize_max=1000
# uniform distribution 1: normal distirbution
dist_vnf_datasize=1
dist_vnf_datasize_mu=0.5
# 0: single SFC mode, 1: multiple SFC mode
#sfc_multimode=1
# Number of VNFs in a SFC.
sfc_vnf_num=20
sfc_vnf_num_min=20
sfc_vnf_num_max=20
# degree is supposed to be set as normal distribution with mu=0.5
sfc_vnf_outdegree_min=1
sfc_vnf_outdegree_max=5
sfc_vnf_startnumrate=0.05
sfc_vnf_deapthalpha=1
# case of multiple SFCs.
multiple_sfc_num=1
multiple_sfc_vnf_num_min=100
multiple_sfc_vnf_num_max=600
dist_multiple_sfc_vnf_num=1
dist_multiple_sfc_vnf_num_mu=0.5
datacenter_num=10
#BW at a DC (MBps)
datacenter_externalbw_min=70
datacenter_externalbw_max=800
host_num_foreachdc_min=10
host_num_foreachdc_max=20
# 1ホスト内のVM数(無視される)
vm_num_foreachdc_min=1
vm_num_foreachdc_max=1
#0: uniform distribution 1: normal distribution
dist_host_cpu_num=1
dist_host_cpu_num_mu=0.5
host_cpu_num_min=1
host_cpu_num_max=1
host_core_num_foreachcpu_min=1
host_core_num_foreachcpu_max=1
# If "2", the core supports Hyperthreading
host_thread_num_foreeachcore=1
offload_program_datasize=1
# Memory (MB)
vm_mem_min=4096
vm_mem_max=16000
# MIPS(1秒あたりの命令数（百万）
# MPIS = clock frequency/CPI / 10^6
#0: uniform distribution 1: normal distribution
dist_host_mips=1
dist_host_mips_mu=0.5
host_mips_min=2000
host_mips_max=4000
# Coreのレート＝CPU速度に対する割合
core_mips_rate_min=1.0
core_mips_rate_max=1.0
#BW (MBps)
#0: uniform distribution 1: normal distribution
dist_host_bw=1
dist_host_bw_mu=0.5
host_bw_min=100
host_bw_max=1000
#CPI(Cycle per Instruction)
vm_cpi=1
# Num of vCPUs for each VM.
dist_vm_vcpu_num=1
dist_vm_vcpu_num_mu=0.5
vm_vcpu_num_min=1
vm_vcpu_num_max=1
# FOR VNFScheduling Algorithm
# 0:average 1: max 2: min
calcmode_level=0
# For Fair VNF Scheduling Algorithm
nfv_fairness_weight_overlap=0.5
# For SFC-CUV Algorithm
# 0: one vCPU 1: vCPUs in the Host, 2: all vCPU 3: Custom
cmwsl_sched_area=3

# 0: SF-CUV 1: HEFT 2: FWS 3: CoordVNF 4: HClustering
sched_algorithm=0

## For offloading
# Num. of mobile devices.
mobile_device_num=10
mobile_device_core_num_min=2
mobile_device_core_num_max=4
# Instructions per second / 10^7
mobile_device_cpu_mips_min=10
mobile_device_cpu_mips_max=25
# mbps
mobile_device_bw_min=10
mobile_device_bw_max=50

mobile_device_power_min=60.0
mobile_device_power_max=100.0
dist_mobile_device_power=1
dist_mobile_device_power_mu=0.5

mobile_device_gain_min=0.3
mobile_device_gain_max=0.9
dist_mobile_device_gain=1
dist_mobile_device_gain_mu=0.5

mobile_device_back_noise=100
# Number of channels.
mec_channel_num=14


mobile_device_tau_min=0.7
mobile_device_tau_max=0.9
dist_mobile_device_tau=1
dist_mobile_device_tau_mu=0.5

# test for predVNF ordering
# 0: default(random order) 1: workload order 2: blevel order ...
sfc_vnf_ordering_mode=0
