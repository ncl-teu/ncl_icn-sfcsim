# \u30CD\u30C3\u30C8\u30EF\u30FC\u30AF\u74B0\u5883\u3092\u66F8\u304D\u51FA\u3059\u304B\u3069\u3046\u304B
# 0: \u3057\u306A\u3044 1: \u66F8\u304D\u51FA\u3059.
iswritenw=0
# \u66F8\u304D\u51FA\u3059\u30D5\u30A1\u30A4\u30EB\u540D
nwfile=nwfile.json
# # of Routers: # of VMs
ccn_router_num=500
#CCN\u30CE\u30FC\u30C9\u6570
ccn_node_num=100
# TTL\u5024
ccn_interest_ttl=32
# \u5B9F\u969B\u306E\u5E2F\u57DF\u5E45\u306E\u5272\u5408\uFF0E0 ~ 1\u306E\u5C0F\u6570\u70B9\u3067\u8A2D\u5B9A\u3057\u3066\u304F\u3060\u3055\u3044\uFF0E
# \u4F8B\u3048\u3070100Mbps\u3067\u5272\u5408\u304C0.5\u3060\u3068\uFF0C\u5B9F\u969B\u306B\u306F
# 100 x 0.5=50Mbps\u7A0B\u5EA6\u306E\u5B9F\u52B9\u901F\u5EA6
# \u3068\u3044\u3046\u6271\u3044\u306B\u306A\u308B\uFF0E
ccn_actual_data_rate=0.7
#1\u30DB\u30C3\u30D7\u306E\u30CD\u30C3\u30C8\u30EF\u30FC\u30AF\u9045\u5EF6\u3067\u3059\uFF0E\u5358\u4F4D\u306F\u30DF\u30EA\u79D2\u3067\u3059\uFF0E
ccn_hop_per_delay=10
ccn_hop_per_delay_min=3
ccn_hop_per_delay_max=10
ccn_hop_per_delay_mu=0.5
# \u4F7F\u3046\u30EB\u30FC\u30C6\u30A3\u30F3\u30B0\u30A2\u30EB\u30B4\u30EA\u30BA\u30E0\u756A\u53F7
# \u6700\u521D\u306BFIB\u306E\u30A8\u30F3\u30C8\u30EA\u3092\u57CB\u3081\u308B\u30A2\u30EB\u30B4\u30EA\u30BA\u30E0
# BA: Barabasi-Albert Model
# 0: Chord 1: Chord with BA 2: LongestMatch 3: AutoRouging
ccn_routing_no=3
#0: Master-worker mode 1: Decentralized Mode
ccn_sfc_mode=1

############ FNJ Problem START ################
# 0: Active 1: Passive 2: Hybrid, else: No check
fnj_checkmode=1
# Time Duration for sending interest packet
fnj_passive_duration=5000
############ FNJ Problem END ################

# Chord\u30A2\u30EB\u30B4\u30EA\u30BA\u30E0\u3067\u4F7F\u3046\uFF0CSHA1\u30CF\u30C3\u30B7\u30E5\u30B3\u30FC\u30C9\u306E2^m-1\u306Em\u306E\u5024
# Chord\u3060\u3068\uFF0C\u6700\u5927\u3067m=160
ccn_max_pow=20
ccn_chord_pit_threshold=3
# \u5019\u88DC\u3068\u306A\u308B\u30A2\u30EB\u30B4\u30EA\u30BA\u30E0\u306E\u6570\uFF0E\u8FFD\u52A0\u3057\u305F\u3089\uFF0C\u304B\u306A\u3089\u305A\u3053\u306E\u5024\u3082+1\u3057\u3066\u304F\u3060\u3055\u3044\uFF0E
ccn_routing_allnum=5
# \u4F7F\u3046\u30AD\u30E3\u30C3\u30B7\u30E5\u30A2\u30EB\u30B4\u30EA\u30BA\u30E0\u756A\u53F7
# 0: On-path\u30AD\u30E3\u30C3\u30B7\u30F3\u30B0\uFF08\u5E30\u308A\u9053\u306E\u30EB\u30FC\u30BF\u3059\u3079\u3066\u3067\u30AD\u30E3\u30C3\u30B7\u30E5\u3059\u308B\uFF09
# 1: No\u30AD\u30E3\u30C3\u30B7\u30F3\u30B0\uFF08\u30AD\u30E3\u30C3\u30B7\u30E5\u3057\u306A\u3044\uFF09
# 2: On-Path Plus
ccn_caching_no=0
# \u5019\u88DC\u3068\u306A\u308B\u30A2\u30EB\u30B4\u30EA\u30BA\u30E0\u306E\u6570\uFF0E\u8FFD\u52A0\u3057\u305F\u3089\uFF0C\u304B\u306A\u3089\u305A\u3053\u306E\u5024\u3082+1\u3057\u3066\u304F\u3060\u3055\u3044\uFF0E
ccn_caching_allnum=3
# \u5404\u30CE\u30FC\u30C9\u306E\u96A3\u63A5\u30EB\u30FC\u30BF\u6570
ccn_node_routernum=10
#CCN\u30CE\u30FC\u30C9\u3067\u9001\u4FE1\u3059\u308BInterest\u30D1\u30B1\u30C3\u30C8\u306E\u7A2E\u985E\uFF08\u3053\u306E\u6570\u3060\u3051\uFF0C\u8981\u6C42\u3092\u51FA\u3059\uFF09
# Ignored in this case.
ccn_node_request_num=10
# Face\u6570\u306E\u6700\u5C0F\u5024@\u30EB\u30FC\u30BF(\u3064\u307E\u308ARIB)
ccn_node_face_num_min=5
# Face\u6570\u306E\u6700\u5927\u5024\uFF20\u30EB\u30FC\u30BF
ccn_node_face_num_max=20
# prefix\u306E\u30C7\u30EA\u30DF\u30BF"/"\u306E\u6570
ccn_prefix_delimiter_num_min=3
ccn_prefix_delimiter_num_max=10
#\u540C\u4E00prefix\u3092\u4FDD\u6301\u3059\u308B\u30EB\u30FC\u30BF\u6570
ccn_prefix_degree_min=2
ccn_prefix_degree_max=4
# \u30B3\u30F3\u30C6\u30F3\u30C4\u30B5\u30A4\u30BA\u306E\u6700\u5C0F\u5024(MB)
ccn_contents_size_min=20
# \u30B3\u30F3\u30C6\u30F3\u30C4\u30B5\u30A4\u30BA\u306E\u6700\u5927\u5024(MB)
ccn_contents_size_max=100
# PIT min
ccn_pit_entry_min=30
# PIT max
ccn_pit_entry_max=50
# FIB min
ccn_fib_entry_min=50
# FIB max
ccn_fib_entry_max=80
# CS min
ccn_cs_entry_min=30
# CS max
ccn_cs_entry_max=50
#0: uniform dist. 1: normal dist.
dist_num_contents=1
# mu\u306E\u5024.
dist_num_contents_mu=0.5
# \u30CE\u30FC\u30C9\u304C\u3082\u3064\u30B3\u30F3\u30C6\u30F3\u30C4\u306E\u6700\u5C0F\u6570
ccn_node_num_contents_min=0
#\u30CE\u30FC\u30C9\u304C\u3082\u3064\u30B3\u30F3\u30C6\u30F3\u30C4\u306E\u6700\u5927\u6570
ccn_node_num_contents_max=0
# \u5168\u4F53\u3068\u3057\u3066\uFF0C\u540C\u4E00\u30B3\u30F3\u30C6\u30F3\u30C4\u306B\u5BFE\u3059\u308BInterest\u30D1\u30B1\u30C3\u30C8\u3092\u9001\u308B\u6570
# \u91CD\u8907prefix\u3092\u3082\u3064Interest\u3092\u9001\u4FE1\u3059\u308B\u30CE\u30FC\u30C9\u6570
ccn_node_duplicate_interest_num_min=3
ccn_node_duplicate_interest_num_max=10
# interest\u30D1\u30B1\u30C3\u30C8\u304C\u8981\u6C42\u3059\u308B\u30B3\u30F3\u30C6\u30F3\u30C4\u6570\uFF08\u4EBA\u6C17\u5EA6\uFF09\u306E\u5206\u5E03
# 0: \u4E00\u69D8\u5206\u5E03 1: \u6B63\u898F\u5206\u5E03
dist_duplicate_interest=1
# \u6B63\u898F\u5206\u5E03\u306E\u5834\u5408\u306Emu\u5024.
dist_duplicate_interest_mu=0.2
# \u540C\u4E00prefix\u3092\u6301\u3064\u30CE\u30FC\u30C9\u306E\u6570
ccn_fib_duplicate_num_min=5
ccn_fib_duplicate_num_max=10
dist_fib_duplicate_mu=0.5
#\u500B\u5225\u306E\u547C\u767A\u751F\u306F\uFF0C\u6307\u6570\u5206\u5E03\u306B\u5F93\u3046\u3082\u306E\u3068\u3059\u308B\uFF0E
# 1\u79D2\u3042\u305F\u308A\u306E\u8981\u6C42\u767A\u751F\u78BA\u7387\u03BB_min\uFF08\u6700\u5C0F\u5024\uFF09
ccn_request_exp_dist_lambda_min=0.2
# 1\u79D2\u3042\u305F\u308A\u306E\u8981\u6C42\u767A\u751F\u78BA\u7387\u03BB_max\uFF08\u6700\u5927\u5024\uFF09
ccn_request_exp_dist_lambda_max=0.5
# \u5404\u30EB\u30FC\u30BF\uFF0C\u30CE\u30FC\u30C9\u306E\u5E2F\u57DF\u5E45\u5206\u5E03\uFF0E0: \u4E00\u69D8\u5206\u5E03 1: \u6B63\u898F\u5206\u5E03
ccn_dist_bw=1
# \u4E2D\u9593\u5024\u306E\u5834\u6240\uFF080.5\u3060\u3068\uFF0C\u4E2D\u9593\u306E\u5024\u304C\u4E00\u756A\u591A\u3044\uFF09
ccn_dist_bw_mu=0.5
#\u5E2F\u57DF\u5E45(MBps)
ccn_bw_min=300
ccn_bw_max=1000
# Breadcrumbs\u306E\u8A2D\u5B9A
# 0: NoBreadCrumbsAlgorithm 1: BreadCrumbsAlgorithm
ccn_bc_enable=0
# BC\u30A2\u30EB\u30B4\u30EA\u30BA\u30E0\u306E\u7DCF\u6570
ccn_bc_allnum=2
# BreadCrumbs\u306E\u5BFF\u547D\u3092\u8A2D\u5B9A(\u5358\u4F4D\u306F\u79D2\uFF09
ccn_bc_timeout=3600
ccn_churn_enable=0
ccn_join_exp_dist_lambda=0.2
ccn_leave_exp_dist_lambda=0.5
ccn_churn_allnum=2
### For CLoud Environment
### # of Applications for ICN-SEC Mode
ccn_sfc_totalnum=5
ccn_sfc_typenum=2
######### SFC section START #########
# \u30B3\u30A2\u306E\u5229\u7528\u7387\u4E0A\u9650\u3092\u8003\u616E\u3059\u308B\u304B\u3069\u3046\u304B
# 0: \u8003\u616E\u3057\u306A\u3044 1: \u8003\u616E\u3059\u308B
cloud_constrained_mode=1
# \u30B3\u30A2\u306E\u4F7F\u7528\u7387\u306E\u4E0A\u9650\u5024
core_max_usage=60
# VNF\u3092vCPU\u3078\u5272\u308A\u5F53\u3066\u305F\u3068\u304D\u306E\u5229\u7528\u7387\u4E0A\u6607\u5024\uFF08%)
vnf_usage_min=20
vnf_usage_max=80
# 0: uniform distribution, 1: normal distribution
dist_vnf_usage=1
dist_vnf_usage_mu=0.5
vnf_type_max=10
# MByte
vnf_image_size_min=50
vnf_image_size_max=1000
#Instructions / 10^7
# 3.0GHz\u30671\u79D2 = 300
vnf_weight_min=3000
vnf_weight_max=10000
# 0: uniforma distribution 1: normal distribution
dist_vnf_weight=1
dist_vnf_weight_mu=0.5
# MB
# 100Mbps (125MB/s)\u30671\u79D2 = 125
vnf_datasize_min=1
vnf_datasize_max=1000
# uniform distribution 1: normal distirbution
dist_vnf_datasize=1
dist_vnf_datasize_mu=0.5
# 0: single SFC mode, 1: multiple SFC mode
#sfc_multimode=1
# Number of VNFs in a SFC.
sfc_vnf_num=20
sfc_vnf_num_min=20
sfc_vnf_num_max=20
# degree is supposed to be set as normal distribution with mu=0.5
sfc_vnf_outdegree_min=1
sfc_vnf_outdegree_max=5
sfc_vnf_startnumrate=0.05
sfc_vnf_deapthalpha=1
# case of multiple SFCs.
multiple_sfc_num=1
multiple_sfc_vnf_num_min=100
multiple_sfc_vnf_num_max=600
dist_multiple_sfc_vnf_num=1
dist_multiple_sfc_vnf_num_mu=0.5
datacenter_num=10
#BW at a DC (MBps)
datacenter_externalbw_min=70
datacenter_externalbw_max=800
host_num_foreachdc_min=10
host_num_foreachdc_max=20
# 1\u30DB\u30B9\u30C8\u5185\u306EVM\u6570(\u7121\u8996\u3055\u308C\u308B)
vm_num_foreachdc_min=1
vm_num_foreachdc_max=1
#0: uniform distribution 1: normal distribution
dist_host_cpu_num=1
dist_host_cpu_num_mu=0.5
host_cpu_num_min=1
host_cpu_num_max=1
host_core_num_foreachcpu_min=1
host_core_num_foreachcpu_max=1
# If "2", the core supports Hyperthreading
host_thread_num_foreeachcore=1
offload_program_datasize=1
# Memory (MB)
vm_mem_min=4096
vm_mem_max=16000
# MIPS(1\u79D2\u3042\u305F\u308A\u306E\u547D\u4EE4\u6570\uFF08\u767E\u4E07\uFF09
# MPIS = clock frequency/CPI / 10^6
#0: uniform distribution 1: normal distribution
dist_host_mips=1
dist_host_mips_mu=0.5
host_mips_min=2000
host_mips_max=4000
# Core\u306E\u30EC\u30FC\u30C8\uFF1DCPU\u901F\u5EA6\u306B\u5BFE\u3059\u308B\u5272\u5408
core_mips_rate_min=1.0
core_mips_rate_max=1.0
#BW (MBps)
#0: uniform distribution 1: normal distribution
dist_host_bw=1
dist_host_bw_mu=0.5
host_bw_min=100
host_bw_max=1000
#CPI(Cycle per Instruction)
vm_cpi=1
# Num of vCPUs for each VM.
dist_vm_vcpu_num=1
dist_vm_vcpu_num_mu=0.5
vm_vcpu_num_min=1
vm_vcpu_num_max=1
# FOR VNFScheduling Algorithm
# 0:average 1: max 2: min
calcmode_level=0
# For Fair VNF Scheduling Algorithm
nfv_fairness_weight_overlap=0.5
# For SFC-CUV Algorithm
# 0: one vCPU 1: vCPUs in the Host, 2: all vCPU 3: Custom
cmwsl_sched_area=3

# 0: SF-CUV 1: HEFT 2: FWS 3: CoordVNF 4: HClustering
sched_algorithm=0

## For offloading
# Num. of mobile devices.
mobile_device_num=10
mobile_device_core_num_min=2
mobile_device_core_num_max=4
# Instructions per second / 10^7
mobile_device_cpu_mips_min=10
mobile_device_cpu_mips_max=25
# mbps
mobile_device_bw_min=10
mobile_device_bw_max=50

mobile_device_power_min=60.0
mobile_device_power_max=100.0
dist_mobile_device_power=1
dist_mobile_device_power_mu=0.5

mobile_device_gain_min=0.3
mobile_device_gain_max=0.9
dist_mobile_device_gain=1
dist_mobile_device_gain_mu=0.5

mobile_device_back_noise=100
# Number of channels.
mec_channel_num=14


mobile_device_tau_min=0.7
mobile_device_tau_max=0.9
dist_mobile_device_tau=1
dist_mobile_device_tau_mu=0.5

# test for predVNF ordering
# 0: default, random order 1: workload order 2: level order 3...
sfc_vnf_ordering_mode=0
